// <auto-generated />
using System;
using System.Collections.Generic;
using Domain.Entities.Viaticos;
using Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Infrastructure.Migrations.Viaticos
{
    [DbContext(typeof(ViaticosDbContext))]
    [Migration("20250605221923_rollback")]
    partial class rollback
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Application.DTO.ViaticoDTO.EstadisticaSolicitudViaticoDTO", b =>
                {
                    b.Property<long>("cantidad_aprobado")
                        .HasColumnType("bigint");

                    b.Property<long>("cantidad_en_revision")
                        .HasColumnType("bigint");

                    b.Property<long>("cantidad_rechazado")
                        .HasColumnType("bigint");

                    b.Property<int>("ciclo_id")
                        .HasColumnType("integer");

                    b.Property<decimal>("monto_alimentacion")
                        .HasColumnType("numeric");

                    b.Property<decimal>("monto_hospedaje")
                        .HasColumnType("numeric");

                    b.Property<decimal>("monto_movilizacion")
                        .HasColumnType("numeric");

                    b.Property<decimal>("total_aprobado")
                        .HasColumnType("numeric");

                    b.Property<decimal>("total_en_revision")
                        .HasColumnType("numeric");

                    b.Property<decimal>("total_monto")
                        .HasColumnType("numeric");

                    b.Property<decimal>("total_rechazado")
                        .HasColumnType("numeric");

                    b.Property<long>("total_solicitudes")
                        .HasColumnType("bigint");

                    b.ToTable((string)null);

                    b.ToView(null, (string)null);
                });

            modelBuilder.Entity("Application.DTO.ViaticoDTO.EstadisticaViaticoDTO", b =>
                {
                    b.Property<string>("categoria")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("diferencia")
                        .HasColumnType("numeric");

                    b.Property<decimal>("porcentaje_ejecucion")
                        .HasColumnType("numeric");

                    b.Property<decimal>("total_acreditado")
                        .HasColumnType("numeric");

                    b.Property<decimal>("total_aprobado")
                        .HasColumnType("numeric");

                    b.Property<decimal>("total_registrado")
                        .HasColumnType("numeric");

                    b.ToTable((string)null);

                    b.ToView(null, (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Viaticos.CategoriaViatico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Estado")
                        .HasColumnType("boolean");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.ToTable("CategoriasViatico");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Estado = true,
                            Nombre = "Movilización"
                        },
                        new
                        {
                            Id = 2,
                            Estado = true,
                            Nombre = "Alimentación"
                        },
                        new
                        {
                            Id = 3,
                            Estado = true,
                            Nombre = "Hospedaje"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Viaticos.CupoMensual", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Categoria")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<int>("CicloId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("timestamp without time zone");

                    b.Property<decimal>("MontoAsignado")
                        .HasColumnType("numeric(10,2)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId", "CicloId", "Categoria")
                        .IsUnique();

                    b.ToTable("CupoMensual");
                });

            modelBuilder.Entity("Domain.Entities.Viaticos.FacturaViatico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("FechaFactura")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("NumeroFactura")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("RucProveedor")
                        .IsRequired()
                        .HasColumnType("character varying(20)");

                    b.Property<string>("RutaImagen")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<decimal>("Subtotal")
                        .HasColumnType("numeric(10,2)");

                    b.Property<decimal>("SubtotalIva")
                        .HasColumnType("numeric(10,2)");

                    b.Property<decimal>("Total")
                        .HasColumnType("numeric(10,2)");

                    b.HasKey("Id");

                    b.HasIndex("RucProveedor");

                    b.ToTable("FacturasViatico");
                });

            modelBuilder.Entity("Domain.Entities.Viaticos.ProveedorViatico", b =>
                {
                    b.Property<string>("Ruc")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("RazonSocial")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.HasKey("Ruc");

                    b.ToTable("ProveedoresViatico");
                });

            modelBuilder.Entity("Domain.Entities.Viaticos.SolicitudVehiculoPrincipal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("AprobadoPorUsuarioId")
                        .HasColumnType("integer");

                    b.Property<int>("Estado")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("FechaAprobacion")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Motivo")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<int>("UsuarioAppId")
                        .HasColumnType("integer");

                    b.Property<int>("VehiculoIdSolicitado")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("VehiculoIdSolicitado");

                    b.ToTable("SolicitudVehiculoPrincipal");
                });

            modelBuilder.Entity("Domain.Entities.Viaticos.SolicitudViatico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CicloId")
                        .HasColumnType("integer");

                    b.Property<int>("Estado")
                        .HasColumnType("integer");

                    b.Property<DateTime>("FechaModificado")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("timestamp without time zone");

                    b.Property<decimal>("Monto")
                        .HasColumnType("numeric");

                    b.Property<int>("UsuarioAppId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("SolicitudesViatico");
                });

            modelBuilder.Entity("Domain.Entities.Viaticos.SubcategoriaViatico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoriaId")
                        .HasColumnType("integer");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.ToTable("SubcategoriaViatico");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoriaId = 1,
                            Nombre = "Mantenimiento"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Viaticos.Vehiculo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Fabricante")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Placa")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<int>("UsuarioAppId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("Placa")
                        .IsUnique();

                    b.ToTable("Vehiculos");
                });

            modelBuilder.Entity("Domain.Entities.Viaticos.VehiculoPrincipal", b =>
                {
                    b.Property<int>("UsuarioAppId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("FechaModificado")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("VehiculoId")
                        .HasColumnType("integer");

                    b.HasKey("UsuarioAppId");

                    b.HasIndex("VehiculoId");

                    b.ToTable("VehiculoPrincipal");
                });

            modelBuilder.Entity("Domain.Entities.Viaticos.Viatico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<List<CampoRechazado>>("CamposRechazados")
                        .HasColumnType("jsonb");

                    b.Property<int>("CategoriaId")
                        .HasColumnType("integer");

                    b.Property<string>("Comentario")
                        .HasColumnType("text");

                    b.Property<int>("EstadoViatico")
                        .HasColumnType("integer");

                    b.Property<int>("FacturaId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("FechaModificado")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("timestamp without time zone");

                    b.Property<decimal>("Monto")
                        .HasColumnType("numeric");

                    b.Property<int>("SolicitudViaticoId")
                        .HasColumnType("integer");

                    b.Property<int?>("SubcategoriaId")
                        .HasColumnType("integer");

                    b.Property<int?>("VehiculoId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.HasIndex("FacturaId")
                        .IsUnique();

                    b.HasIndex("SolicitudViaticoId");

                    b.HasIndex("SubcategoriaId");

                    b.HasIndex("VehiculoId");

                    b.ToTable("Viaticos");
                });

            modelBuilder.Entity("Domain.Entities.Viaticos.FacturaViatico", b =>
                {
                    b.HasOne("Domain.Entities.Viaticos.ProveedorViatico", "Proveedor")
                        .WithMany("Facturas")
                        .HasForeignKey("RucProveedor")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Proveedor");
                });

            modelBuilder.Entity("Domain.Entities.Viaticos.SolicitudVehiculoPrincipal", b =>
                {
                    b.HasOne("Domain.Entities.Viaticos.Vehiculo", "Vehiculo")
                        .WithMany()
                        .HasForeignKey("VehiculoIdSolicitado")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Vehiculo");
                });

            modelBuilder.Entity("Domain.Entities.Viaticos.SubcategoriaViatico", b =>
                {
                    b.HasOne("Domain.Entities.Viaticos.CategoriaViatico", "Categoria")
                        .WithMany("Subcategorias")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Categoria");
                });

            modelBuilder.Entity("Domain.Entities.Viaticos.VehiculoPrincipal", b =>
                {
                    b.HasOne("Domain.Entities.Viaticos.Vehiculo", "Vehiculo")
                        .WithMany()
                        .HasForeignKey("VehiculoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Vehiculo");
                });

            modelBuilder.Entity("Domain.Entities.Viaticos.Viatico", b =>
                {
                    b.HasOne("Domain.Entities.Viaticos.CategoriaViatico", "Categoria")
                        .WithMany("Viaticos")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Viaticos.FacturaViatico", "Factura")
                        .WithOne()
                        .HasForeignKey("Domain.Entities.Viaticos.Viatico", "FacturaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Viaticos.SolicitudViatico", "SolicitudViatico")
                        .WithMany("Viaticos")
                        .HasForeignKey("SolicitudViaticoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Viaticos.SubcategoriaViatico", "Subcategoria")
                        .WithMany("Viaticos")
                        .HasForeignKey("SubcategoriaId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Domain.Entities.Viaticos.Vehiculo", "Vehiculo")
                        .WithMany("Viaticos")
                        .HasForeignKey("VehiculoId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Categoria");

                    b.Navigation("Factura");

                    b.Navigation("SolicitudViatico");

                    b.Navigation("Subcategoria");

                    b.Navigation("Vehiculo");
                });

            modelBuilder.Entity("Domain.Entities.Viaticos.CategoriaViatico", b =>
                {
                    b.Navigation("Subcategorias");

                    b.Navigation("Viaticos");
                });

            modelBuilder.Entity("Domain.Entities.Viaticos.ProveedorViatico", b =>
                {
                    b.Navigation("Facturas");
                });

            modelBuilder.Entity("Domain.Entities.Viaticos.SolicitudViatico", b =>
                {
                    b.Navigation("Viaticos");
                });

            modelBuilder.Entity("Domain.Entities.Viaticos.SubcategoriaViatico", b =>
                {
                    b.Navigation("Viaticos");
                });

            modelBuilder.Entity("Domain.Entities.Viaticos.Vehiculo", b =>
                {
                    b.Navigation("Viaticos");
                });
#pragma warning restore 612, 618
        }
    }
}
